import { PrismaClient } from '@prisma/client';

const prisma = new PrismaClient();

async function main() {
  // TƒÉng timeout cho phi√™n seed (tr√°nh 1205 n·∫øu DB h∆°i ch·∫≠m)
  await prisma.$executeRawUnsafe('SET SESSION innodb_lock_wait_timeout=50;');

  // =============================
  // 0) D·ªåN D·ªÆ LI·ªÜU C≈® AN TO√ÄN
  // =============================
  // T·∫Øt FK, TRUNCATE theo th·ª© t·ª± (tag/registration tr∆∞·ªõc, r·ªìi events)
  await prisma.$executeRawUnsafe('SET FOREIGN_KEY_CHECKS=0;');
  try {
    await prisma.$executeRawUnsafe('TRUNCATE TABLE event_tags;');
  } catch {}
  try {
    await prisma.$executeRawUnsafe('TRUNCATE TABLE registrations;'); // n·∫øu b·∫°n c√≥ b·∫£ng n√†y
  } catch {}
  try {
    await prisma.$executeRawUnsafe('TRUNCATE TABLE events;');
  } catch {}
  // Gi·ªØ l·∫°i categories (n·∫øu mu·ªën reset th√¨ TRUNCATE r·ªìi seed l·∫°i)
  // await prisma.$executeRawUnsafe('TRUNCATE TABLE event_categories;');
  await prisma.$executeRawUnsafe('SET FOREIGN_KEY_CHECKS=1;');

  // =============================
  // 1) SEED CATEGORIES
  // =============================
  const categories = [
    { name: 'orientation', description: 'S·ª± ki·ªán ƒë·ªãnh h∆∞·ªõng t√¢n sinh vi√™n', color: 'bg-blue-500', icon: 'GraduationCap' },
    { name: 'ceremony',   description: 'L·ªÖ khai gi·∫£ng, t·ªët nghi·ªáp',          color: 'bg-purple-500', icon: 'Award' },
    { name: 'training',   description: 'R√®n luy·ªán, k·ªπ nƒÉng, s·ª©c kh·ªèe',       color: 'bg-red-500', icon: 'Heart' },
    { name: 'placement',  description: 'Ki·ªÉm tra x·∫øp l·ªõp, thi c·ª≠',           color: 'bg-yellow-500', icon: 'FileText' },
    { name: 'career',     description: 'H·ªôi ch·ª£ vi·ªác l√†m, h∆∞·ªõng nghi·ªáp',     color: 'bg-orange-500', icon: 'Briefcase' },
  ];

  for (const c of categories) {
    await prisma.event_categories.upsert({
      where: { name: c.name },
      update: {},
      create: c,
    });
  }

  // =============================
  // 2) SEED EVENTS (createMany)
  // =============================
  // L∆ØU √ù: c√°c field kh·ªõp v·ªõi schema b·∫°n ƒëang d√πng
  const eventsData = [
    {
      title: 'T·ª±u tr∆∞·ªùng ‚Äì Welcome T√¢n sinh vi√™n',
      description: 'Ch√†o ƒë√≥n T√¢n sinh vi√™n K21 t·∫°i FPTU TP.HCM.',
      full_description:
        `üéâ S·ª± ki·ªán ch√†o ƒë√≥n T√¢n sinh vi√™n K21 t·∫°i FPTU TP.HCM, m·ªü ra h√†nh tr√¨nh ƒë·∫°i h·ªçc ƒë·∫ßy c·∫£m h·ª©ng.\n\n` +
        `üìå N·ªôi dung: check-in, h∆∞·ªõng d·∫´n nh·∫≠p h·ªçc, g·∫∑p g·ª° c·ªë v·∫•n, mini game, booth CLB‚Ä¶\n\n` +
        `üïí 03 ‚Äì 04/09/2025\nüìç FPTU TP.HCM\nüë• T√¢n sinh vi√™n K21`,
      start_date: new Date('2025-09-03'),
      end_date: new Date('2025-09-04'),
      location: 'FPTU TP.HCM',
      target_audience: 'T√¢n sinh vi√™n K21',
      event_type: 'orientation',
      status: 'upcoming',
      priority: 'normal',
      current_participants: 0,
      is_mandatory: true,
      is_online: false,
      organizer: 'Tr∆∞·ªùng ƒê·∫°i h·ªçc FPT',
      registration_required: true,
      image_url: null,
    },
    {
      title: 'H∆∞·ªõng d·∫´n C√¥ng ngh·ªá th√¥ng tin',
      description: 'Bu·ªïi h∆∞·ªõng d·∫´n CNTT tr·ª±c tuy·∫øn theo ca cho T√¢n sinh vi√™n.',
      full_description:
        `üíª H∆∞·ªõng d·∫´n email sinh vi√™n, LMS, portal, wifi, ph·∫ßn m·ªÅm h·ªçc t·∫≠p.\n\n` +
        `üïí 04/09/2025\nüìç Online\nüë• T√¢n sinh vi√™n K21`,
      start_date: new Date('2025-09-04'),
      end_date: new Date('2025-09-04'),
      location: 'Online',
      target_audience: 'T√¢n sinh vi√™n K21',
      event_type: 'training',
      status: 'upcoming',
      priority: 'normal',
      current_participants: 0,
      is_mandatory: true,
      is_online: true,
      organizer: 'Tr∆∞·ªùng ƒê·∫°i h·ªçc FPT',
      registration_required: true,
      image_url: null,
    },
    {
      title: 'L·ªÖ Khai gi·∫£ng nƒÉm h·ªçc 2025 ‚Äì 2026',
      description: 'Khai gi·∫£ng to√†n qu·ªëc, truy·ªÅn h√¨nh tr·ª±c ti·∫øp VTV1.',
      full_description:
        `üéì K·∫øt n·ªëi tr·ª±c tuy·∫øn to√†n qu·ªëc, k·ª∑ ni·ªám 80 nƒÉm B·ªô Gi√°o d·ª•c.\n\n` +
        `üïí 05/09/2025\nüìç To√†n qu·ªëc (k·∫øt n·ªëi tr·ª±c tuy·∫øn)\nüë• To√†n tr∆∞·ªùng`,
      start_date: new Date('2025-09-05'),
      end_date: new Date('2025-09-05'),
      location: 'To√†n qu·ªëc (k·∫øt n·ªëi tr·ª±c tuy·∫øn)',
      target_audience: 'To√†n tr∆∞·ªùng',
      event_type: 'ceremony',
      status: 'upcoming',
      priority: 'normal',
      current_participants: 0,
      is_mandatory: true,
      is_online: true,
      organizer: 'Tr∆∞·ªùng ƒê·∫°i h·ªçc FPT & B·ªô GD&ƒêT',
      registration_required: false,
      image_url: null,
    },
    {
      title: 'H∆∞·ªõng d·∫´n & Ki·ªÉm tra x·∫øp l·ªõp Ti·∫øng Anh',
      description: 'Sinh vi√™n tham gia h∆∞·ªõng d·∫´n v√† ki·ªÉm tra ph√¢n l·ªõp ti·∫øng Anh.',
      full_description:
        `üó£Ô∏è Gi·ªõi thi·ªáu l·ªô tr√¨nh TA, ki·ªÉm tra x·∫øp l·ªõp ƒë·∫ßu v√†o.\n\n` +
        `üïí 06 ‚Äì 07/09/2025\nüìç FPTU TP.HCM\nüë• T√¢n sinh vi√™n K21`,
      start_date: new Date('2025-09-06'),
      end_date: new Date('2025-09-07'),
      location: 'FPTU TP.HCM',
      target_audience: 'T√¢n sinh vi√™n K21',
      event_type: 'placement',
      status: 'upcoming',
      priority: 'normal',
      current_participants: 0,
      is_mandatory: true,
      is_online: false,
      organizer: 'Tr∆∞·ªùng ƒê·∫°i h·ªçc FPT',
      registration_required: false,
      image_url: null,
    },
    {
      title: 'R√®n luy·ªán t·∫≠p trung & Kh√°m s·ª©c kh·ªèe',
      description: 'Sinh vi√™n tham gia r√®n luy·ªán t·∫≠p trung v√† kh√°m s·ª©c kh·ªèe theo ƒë·ª£t.',
      full_description:
        `üí™ R√®n luy·ªán th·ªÉ ch·∫•t + kh√°m s·ª©c kh·ªèe ƒë·ªãnh k·ª≥.\n\n` +
        `üïí 08/09 ‚Äì 31/10/2025 (chia ƒë·ª£t)\nüìç FPTU TP.HCM\nüë• T√¢n sinh vi√™n K21`,
      start_date: new Date('2025-09-08'),
      end_date: new Date('2025-10-31'),
      location: 'FPTU TP.HCM',
      target_audience: 'T√¢n sinh vi√™n K21',
      event_type: 'training',
      status: 'upcoming',
      priority: 'normal',
      current_participants: 0,
      is_mandatory: true,
      is_online: false,
      organizer: 'Tr∆∞·ªùng ƒê·∫°i h·ªçc FPT',
      registration_required: true,
      image_url: null,
    },
    {
      title: 'Tu·∫ßn l·ªÖ ƒë·ªãnh h∆∞·ªõng (Orientation Week)',
      description: 'Sinh vi√™n tham gia Orientation Week ƒë·ªÉ l√†m quen v·ªõi m√¥i tr∆∞·ªùng h·ªçc t·∫≠p.',
      full_description:
        `üß≠ Hi·ªÉu vƒÉn h√≥a, c√°ch h·ªçc t√≠n ch·ªâ, ƒë·ªùi s·ªëng sinh vi√™n.\n\n` +
        `üïí Nh√≥m 1: 10/09 ‚Äì 19/09/2025 | Nh√≥m 2: 08/10 ‚Äì 17/10/2025\nüìç FPTU TP.HCM\nüë• T√¢n sinh vi√™n K21`,
      start_date: new Date('2025-09-10'),
      end_date: new Date('2025-10-17'),
      location: 'FPTU TP.HCM',
      target_audience: 'T√¢n sinh vi√™n K21',
      event_type: 'orientation',
      status: 'upcoming',
      priority: 'normal',
      current_participants: 0,
      is_mandatory: true,
      is_online: false,
      organizer: 'Tr∆∞·ªùng ƒê·∫°i h·ªçc FPT',
      registration_required: false,
      image_url: null,
    },
    {
      title: 'Ki·ªÉm tra x·∫øp l·ªõp LUK Global',
      description: 'B√†i ki·ªÉm tra x·∫øp l·ªõp LUK Global. Ch√≠nh th·ª©c h·ªçc theo TKB.',
      full_description:
        `üåç Ki·ªÉm tra LUK Global ‚Äì ph√¢n l·ªõp v√† b·∫Øt ƒë·∫ßu h·ªçc ch√≠nh th·ª©c.\n\n` +
        `üïí 03/11/2025\nüìç FPTU TP.HCM\nüë• T√¢n sinh vi√™n K21`,
      start_date: new Date('2025-11-03'),
      end_date: new Date('2025-11-03'),
      location: 'FPTU TP.HCM',
      target_audience: 'T√¢n sinh vi√™n K21',
      event_type: 'placement',
      status: 'upcoming',
      priority: 'normal',
      current_participants: 0,
      is_mandatory: true,
      is_online: false,
      organizer: 'Tr∆∞·ªùng ƒê·∫°i h·ªçc FPT',
      registration_required: false,
      image_url: null,
    },
    {
      title: 'Convocation Day ‚Äì L·ªÖ t·ªët nghi·ªáp, Alumni Day & Career Fair',
      description: 'L·ªÖ t·ªët nghi·ªáp, Alumni Day v√† Career Fair t·∫°i FPTU TP.HCM.',
      full_description:
        `üéì L·ªÖ t·ªët nghi·ªáp + üë• Alumni Day + üíº Career Fair.\n\n` +
        `üïí 11/2025\nüìç FPTU TP.HCM\nüë• To√†n tr∆∞·ªùng`,
      start_date: new Date('2025-11-15'),
      end_date: new Date('2025-11-15'),
      location: 'FPTU TP.HCM',
      target_audience: 'To√†n tr∆∞·ªùng',
      event_type: 'ceremony',
      status: 'upcoming',
      priority: 'normal',
      current_participants: 0,
      is_mandatory: false,
      is_online: false,
      organizer: 'Tr∆∞·ªùng ƒê·∫°i h·ªçc FPT',
      registration_required: true,
      image_url: null,
    },
  ] as const;

  await prisma.events.createMany({
    data: eventsData.map(e => ({ ...e })),
    skipDuplicates: true,
  });

  // L·∫•y l·∫°i id theo title ƒë·ªÉ g·∫Øn tags
  const dbEvents = await prisma.events.findMany({
    select: { id: true, title: true },
  });
  const idByTitle = new Map(dbEvents.map(e => [e.title, e.id]));

  // =============================
  // 3) SEED TAGS (createMany)
  // =============================
  const tagList: { event_id: number; tag_name: string }[] = [];

  function addTags(title: string, tags: string[]) {
    const id = idByTitle.get(title);
    if (!id) return;
    for (const t of tags) {
      tagList.push({ event_id: id, tag_name: t });
    }
  }

  addTags('T·ª±u tr∆∞·ªùng ‚Äì Welcome T√¢n sinh vi√™n', ['K21', 'Nh·∫≠p h·ªçc', 'Welcome', 'Orientation']);
  addTags('H∆∞·ªõng d·∫´n C√¥ng ngh·ªá th√¥ng tin', ['K21', 'CNTT', 'LMS', 'Online']);
  addTags('L·ªÖ Khai gi·∫£ng nƒÉm h·ªçc 2025 ‚Äì 2026', ['Khai gi·∫£ng', 'To√†n qu·ªëc', 'VTV1', '2025-2026']);
  addTags('H∆∞·ªõng d·∫´n & Ki·ªÉm tra x·∫øp l·ªõp Ti·∫øng Anh', ['Ti·∫øng Anh', 'Placement', 'K21']);
  addTags('R√®n luy·ªán t·∫≠p trung & Kh√°m s·ª©c kh·ªèe', ['R√®n luy·ªán', 'Kh√°m s·ª©c kh·ªèe', 'K21']);
  addTags('Tu·∫ßn l·ªÖ ƒë·ªãnh h∆∞·ªõng (Orientation Week)', ['Orientation Week', 'K21', 'ƒê·ªãnh h∆∞·ªõng']);
  addTags('Ki·ªÉm tra x·∫øp l·ªõp LUK Global', ['LUK Global', 'Placement', 'K21']);
  addTags('Convocation Day ‚Äì L·ªÖ t·ªët nghi·ªáp, Alumni Day & Career Fair', ['Convocation', 'Alumni Day', 'Career Fair']);

  if (tagList.length) {
    await prisma.event_tags.createMany({
      data: tagList,
      skipDuplicates: true,
    });
  }

  console.log('‚úÖ Seed data created successfully!');
}

main()
  .then(async () => {
    await prisma.$disconnect();
  })
  .catch(async (e) => {
    console.error(e);
    await prisma.$disconnect();
    process.exit(1);
  });
